@using Bch.Components.Modal
@using Bch.Components.Calendar.CalendarDays
@using Bch.Components.Calendar.CalendarMonths

<div class="bch-datepicker-wrapper @CssClass @GetThemeCssClass()" id="@_containerId" tabindex="-1">
    <div class="bch-datepicker" @onclick="OnCalendarClickedAsync">
        <input id="@_inputId"
               class="bch-datepicker-input"
               readonly
               autocomplete="unrechable-filter-to-autocomplete"
               value="@(Value?.ToString(Format) ?? GetPlaceholderText())"
               @ref="@_inputRef"/>
        <img class="bch-datepicker-img" src="_content/Bch.Components.Calendar/img/calendar-icon.svg"/>
    </div>

    <BchModal CssClass="@($"bch-calendar-days-modal-wrapper {CssClass}")"
              Width="250px"
              Height="unset"
              X="@($"{_containerPos.X.ToString(_nF)}px")"
              Y="@($"{_containerPos.Y.ToString(_nF)}px")"
              Show="_showDate"
              ShowChanged="OnDateChanged">

        <BchCalendarDays Id="@_calendarDaysId"
                         Culture="@Culture"
                         DefaultMonth="_selectedMonth"
                         DefaultYear="_selectedYear"
                         SelectedDate="Value"
                         Theme="@EffectiveTheme"
                         OnFocusOut="() => _inputRef.FocusAsync()"
                         IsDateRange="false"
                         ShowClearButton="ShowClearButton"
                         OnDateSelected="e => { Value = e; _showDate = false; return OnShowModeChangedAsync(); }"
                         OnDateCleared="() => { Value = null; _showDate = false; return OnShowModeChangedAsync(); }"
                         OnCloseDate="() => { _showDate = false; return OnShowModeChangedAsync(); }"
                         IsShowMonth="e => { _showMonth = e; _showDate = false; return OnShowModeChangedAsync(); }"/>

    </BchModal>

    <BchModal CssClass="@($"bch-calendar-months-modal-wrapper {CssClass}")"
              Width="250px"
              Height="unset"
              X="@($"{_containerPos.X.ToString(_nF)}px")"
              Y="@($"{_containerPos.Y.ToString(_nF)}px")"
              Show="_showMonth"
              ShowChanged="OnMonthChanged">

        <BchCalendarMonths Id="@_calendarMonthsId"
                           YearsSelectContentId="@_yearsSelectContentId"
                           Culture="@Culture"
                           Theme="@EffectiveTheme"
                           SelectedMonth="_selectedMonth"
                           SelectedYear="_selectedYear"
                           MonthChanged="e => { _selectedMonth = e; StateHasChanged(); }"
                           YearChanged="e=> { _selectedYear = e; StateHasChanged(); }"
                           IsShowDate="e => { _showMonth = false; _showDate = e; return OnShowModeChangedAsync(); }"
                           OnFocusOut="() => _inputRef.FocusAsync()"/>
    </BchModal>

</div>

<style>
    .bch-calendar-days-modal-wrapper,
    .bch-calendar-months-modal-wrapper {
        transform: translateY(49px);
    }
</style>