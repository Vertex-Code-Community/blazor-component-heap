@using Bch.Components.Modal
@using Bch.Components.Tabs.TabDraggingContent
@using Bch.Components.Tabs.TabPanel
@using Bch.Components.Tabs.TabPanel.DefaultTab
@using Bch.Components.Tabs.TabPanelScroller

@typeparam TItem

<div class="bch-component bch-tabs-container @GetThemeCssClass() @_cssKey">
    <BchTabPanelScroller TItem="TItem"
                         Gap="Gap"
                         Items="Items"
                         DraggableContext="_draggableContext"
                         TabWidthPredicate="TabWidthPredicate"
                         ScrollToSelected="ScrollToSelected"
                         ScrollTabWidth="ScrollTabWidth"
                         TabHeight="TabHeight"
                         Selected="_selectedValue"
                         Theme="@EffectiveTheme">

        <BchTabPanel TItem="TItem"
                     @bind-Selected="Selected"
                     Gap="Gap"
                     Items="Items"
                     DraggableContext="_draggableContext"
                     MinimalTabCount="MinimalTabCount"
                     Draggable="_draggable"
                     TabWidthPredicate="TabWidthPredicate"
                     OnItemDragStart="OnItemDragStartAsync"
                     OnItemDragEnd="OnItemDragEnd"
                     OnItemDrag="OnItemDragAsync"
                     Theme="@EffectiveTheme">

            <ItemTemplate Context="item">

                @if (TabTemplate == null)
                {
                    <BchDefaultTab TItem="TItem"
                                   Item="@item"
                                   DefaultTabText="DefaultTabText"
                                   SelectedItem="_selectedValue"
                                   ShowCloseButton="@(Items.Count > 1 && ShowCloseOnDefaultTab)"
                                   OnClose="OnCloseItem"
                                   Theme="@EffectiveTheme" />
                }
                else
                {
                    @TabTemplate(item)
                }

            </ItemTemplate>

        </BchTabPanel>

    </BchTabPanelScroller>

    <div id="@_contentId" class="bch-tabs-content">
        @if (_draggableContext.DraggingItem != _selectedValue && ContentTemplate is not null)
        {
            @ContentTemplate(_selectedValue)
            @* TODO: Default template *@
        }
    </div>
</div>

<BchModal @ref="_modalComponent"
          Width="@($"{_width}px")"
          Height="@($"{_height + TabHeight}px")"
          CssClass="@($"draggable-panel-floating-item")"
          X="@($"{(_draggableContext.DraggingPosition.X - _draggableContext.StartOffset.X).ToString(_nF)}px")"
          Y="@($"{(_draggableContext.DraggingPosition.Y - _draggableContext.StartOffset.Y).ToString(_nF)}px")"
          CssStyles="pointer-events: none;"
          Show="@(_draggableContext.DraggingItem != null && _isDragging)">
    <BchTabDraggingContent TItem="TItem"
                           Item="_draggableContext.DraggingItem"
                           TabHeight="TabHeight"
                           TabWidthPredicate="TabWidthPredicate"
                           Theme="@EffectiveTheme">
        <TabTemplate Context="item">
            @if (TabTemplate == null)
            {
                <BchDefaultTab TItem="TItem"
                               Item="item"
                               DefaultTabText="DefaultTabText"
                               SelectedItem="_selectedValue"
                               ShowCloseButton="ShowCloseOnDefaultTab"
                               Theme="@EffectiveTheme" />
            }
            else
            {
                @TabTemplate(item)
            }
        </TabTemplate>

        <ContentTemplate Context="item">
            @if (ContentTemplate is not null)
            {
                @ContentTemplate(item)
            }
        </ContentTemplate>
    </BchTabDraggingContent>
</BchModal>

<style>
    /* THEME: LightGreen */
    .@(_cssKey).bch-theme-light-green.bch-tabs-container,
    html.bch-theme-light-green .@(_cssKey).bch-no-theme-specified.bch-tabs-container {
        background: #FEFEFE;
        box-shadow: 0 0 21px rgba(188, 188, 188, 0.3);
        border-radius: 15px;
    }

    .@(_cssKey).bch-theme-light-green.bch-tabs-container > .bch-tabs-content,
    html.bch-theme-light-green .@(_cssKey).bch-no-theme-specified.bch-tabs-container > .bch-tabs-content { color: #131212; }

    /* THEME: Light */
    .@(_cssKey).bch-theme-light.bch-tabs-container,
    html.bch-theme-light .@(_cssKey).bch-no-theme-specified.bch-tabs-container {
        background: #FFFFFF;
        box-shadow: 1px 0px 3px rgba(200, 200, 200, 0.2), 0px 1px 3px rgba(200, 200, 200, 0.2);
        border-radius: 15px;
    }

    .@(_cssKey).bch-theme-light.bch-tabs-container > .bch-tabs-content,
    html.bch-theme-light .@(_cssKey).bch-no-theme-specified.bch-tabs-container > .bch-tabs-content { color: #212529; }

    /* THEME: Dark */
    .@(_cssKey).bch-theme-dark.bch-tabs-container,
    html.bch-theme-dark .@(_cssKey).bch-no-theme-specified.bch-tabs-container {
        background: #111827;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.35);
        border-radius: 15px;
    }

    .@(_cssKey).bch-theme-dark.bch-tabs-container > .bch-tabs-content,
    html.bch-theme-dark .@(_cssKey).bch-no-theme-specified.bch-tabs-container > .bch-tabs-content { color: #E5E7EB; }
</style>