@using Microsoft.JSInterop



    @if (!_isServerSide)
    {
        <div class="bch-image-cropper-container @(IsMobile ? " bch-mobile" : "")">

            @if (IsMobile)
            {
                <div class="bch-controls">
                    <div class="bch-btn bch-cancel bch-no-selectable-text"
                         @onclick="async () => { await OnCancelClicked.InvokeAsync(); }">
                        Cancel
                    </div>
                    <div class="bch-btn bch-save bch-no-selectable-text"
                         @onclick="async () => { await OnSaveClicked.InvokeAsync(); }">
                        Save
                    </div>
                </div>
            }

            <div class="bch-cropper-container">
                <BCHCropper @ref="_bchCropper"
                            BackgroundColor="@BackgroundColor"
                            ResultFormat="@ResultFormat"
                            CropperType="CropperType.MovableRectangle"
                            CroppedWidth="@CroppedWidth"
                            Ratio="@(16.0f / 9.0f)"
                            ViewMode="ViewMode.StretchToBorders"
                            StretchCropArea="true"
                            Base64Image="@Base64Image"
                            MinScale="@MinScale"
                            MaxScale="@MaxScale"
                            ScaleFactor="@ScaleFactor"
                            ScaleOnMouseWheel="@ScaleOnMouseWheel"
                            UseTouchRotation="@UseTouchRotation"
                            MinRectangleWidth="@MinRectangleWidth"
                            MinRectangleHeight="@MinRectangleHeight"
                            OnUpdateScale="OnUpdateCropperAsync"/>
            </div>

            <div class="bch-control-container">
                <div class="bch-first-line">
                    <div class="bch-left">

                        <div class="bch-rotate-btn bch-left"
                             @ontouchstart="async () => { await OnMouseDownAsync(-0.008f); }"
                             @onmousedown="async () => { await OnMouseDownAsync(-0.008f); }">
                            <div class="bch-icon"></div>
                            <div class="bch-text bch-no-selectable-text">Rotate Left</div>
                        </div>

                        <div class="bch-rotate-btn bch-right"
                             @onmousedown="async () => { await OnMouseDownAsync(+0.008f); }"
                             @ontouchstart="async () => { await OnMouseDownAsync(+0.008f); }">
                            <div class="bch-icon"></div>
                            <div class="bch-text bch-no-selectable-text">Rotate Right</div>
                        </div>

                    </div>
                    <div class="bch-right">
                        <div class="images">
                            <div class="icon-small"></div>
                            <div class="icon-big"></div>
                        </div>
                        <div class="range">
                            <BCHRange @ref="_bchRange"
                                      ShowFillColor="true"
                                      Min="MinScale"
                                      Max="MaxScale"
                                      ShowTooltip="false"
                                      ValueChanged="OnRangeMove"/>
                        </div>
                    </div>
                </div>

                <div class="bch-second-line">
                    <div class="bch-scale-blocks">
                        <div class="bch-block" @onclick="async () => { await OnSetRatioAsync(1.0f); }">
                            <div class="bch-rect"></div>
                            <div class="bch-text bch-no-selectable-text">1:1</div>
                        </div>

                        <div class="bch-block" @onclick="async () => { await OnSetRatioAsync(3.0f / 4.0f); }">
                            <div class="bch-rect"></div>
                            <div class="bch-text bch-no-selectable-text">3:4</div>
                        </div>

                        <div class="bch-block" @onclick="async () => { await OnSetRatioAsync(4.0f / 3.0f); }">
                            <div class="bch-rect"></div>
                            <div class="bch-text bch-no-selectable-text">4:3</div>
                        </div>

                        <div class="bch-block" @onclick="async () => { await OnSetRatioAsync(16.0f / 9.0f); }">
                            <div class="bch-rect"></div>
                            <div class="bch-text bch-no-selectable-text">16:9</div>
                        </div>
                    </div>

                    @if (!IsMobile)
                    {
                        <div class="bch-controls">
                            <div class="bch-btn bch-cancel bch-no-selectable-text"
                                 @onclick="async () => { await OnCancelClicked.InvokeAsync(); }">
                                Cancel
                            </div>
                            <div class="bch-btn bch-save bch-no-selectable-text"
                                 @onclick="async () => { await OnSaveClicked.InvokeAsync(); }">
                                Save
                            </div>
                        </div>
                    }

                </div>
            </div>

        </div>
    }
    else
    {
        <div class="bch-not-supported">BCHImageCropper is not supported on Blazor Server</div>
    }



<style>

    .bch-image-cropper-container .bch-horizontal-range-container {
        height: 8px;
    }    
    
    .bch-image-cropper-container .bch-horizontal-range-container .bch-range-circle {
        width:  22px;
        height: 22px;
        top: -6.5px;
    }
    
</style>