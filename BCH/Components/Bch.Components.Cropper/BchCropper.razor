@using Bch.Components.Cropper.Models
@using Bch.Components.Zoom
@using Bch.Components.Zoom.Models

<div id="@_cropperId"
     style="@($"background: {BackgroundColor}; pointer-events: {(_processingData ? "none" : "all")};")"
     class="bch-cropper-container bch-no-mobile-selection @(_loaded ? "bch-loaded" : "bch-loading")">

    <div class="bch-hidden-image-preview">
        <img class="bch-no-selectable-text"
             draggable="false"
             @onimageloaded="OnImageLoadedAsync"
             src="@ImageUrl"/>
    </div>

    @if (_loaded)
    {
        <BchZoom ContainerSize="_containerSize"
                 ContentSize="_contentSize"
                 ZoomOnMouseWheel="@ScaleOnMouseWheel"
                 UseTouchRotation="@UseTouchRotation"
                 MinScale="@MinScale"
                 MaxScale="@MaxScale"
                 ScaleFactor="ScaleFactor"
                 OnUpdate="OnZoomUpdate">
            <div class="bch-image-wrapper bch-no-selectable-text"
                 draggable="false"
                 mousewheel-prevent-default="@ScaleOnMouseWheel"
                 mousewheel-stop-propagation="@ScaleOnMouseWheel">
                <img id="@_imageId"
                     class="bch-no-selectable-text"
                     draggable="false"
                     src="@ImageUrl"/>
            </div>
        </BchZoom>
    }

    @switch (CropperType)
    {
        case CropperType.Circle:
            <div id="@_circleId"
                 class="bch-circle-cropper bch-no-mobile-selection"
                 style="@($"width: {_circleSize}px; height: {_circleSize}px;")"
                 mousewheel-prevent-default="@ScaleOnMouseWheel"
                 mousewheel-stop-propagation="@ScaleOnMouseWheel">
            </div>
            break;
        case CropperType.MovableRectangle:
            <div id="@_rectId"
                 class="@($"bch-rectangular-wrapper bch-no-mobile-selection {(!_rectDragged && !_rectHandleDragged ? "bch-disabled" : "")}")"
                 @onmouseleave='OnMouseLeaveUpAsync'
                 @onmouseup='OnMouseLeaveUpAsync'>

                <div
                    style="@($"left: {_rectPos.X.ToString(_nF)}px; top: {_rectPos.Y.ToString(_nF)}px; width: {_rectSize.X.ToString(_nF)}px; height: {_rectSize.Y.ToString(_nF)}px; min-width: {MinRectangleWidth}px; min-height: {MinRectangleHeight}px;")"
                    class="@($"bch-cropper-wrapper bch-no-mobile-selection {(_rectDragged || _rectHandleDragged || _userInteraction ? "bch-disabled" : "")}")"
                    @onmousedown="e => OnMouseDownAsync(e, true)"
                    @ontouchstart="e => OnTouchStartAsync(e, true)"
                    mousewheel-prevent-default="@ScaleOnMouseWheel"
                    mousewheel-stop-propagation="@ScaleOnMouseWheel">

                    <div class="@($"bch-handle bch-no-mobile-selection {(_rectHandleDragged ? "bch-active" : "")}")"
                         @onmousedown:stopPropagation
                         @onmousedown="e => OnMouseDownAsync(e, false)"
                         @ontouchstart:stopPropagation
                         @ontouchstart="e => OnTouchStartAsync(e, false)"
                         mousewheel-prevent-default="@ScaleOnMouseWheel"
                         mousewheel-stop-propagation="@ScaleOnMouseWheel">
                    </div>

                    <div class="bch-border bch-b1"></div>
                    <div class="bch-border bch-b2"></div>
                    <div class="bch-border bch-b3"></div>
                    <div class="bch-border bch-b4"></div>

                </div>
            </div>
            break;
        case CropperType.FixedRectangle:
            <div id="@_rectId"
                 class="bch-rectangular-wrapper bch-disabled bch-no-mobile-selection">
                <div
                    style="@($"left: {_rectPos.X.ToString(_nF)}px; top: {_rectPos.Y.ToString(_nF)}px; width: {_rectSize.X.ToString(_nF)}px; height: {_rectSize.Y.ToString(_nF)}px;")"
                    class="bch-cropper-wrapper bch-disabled bch-no-mobile-selection"
                    mousewheel-prevent-default="@ScaleOnMouseWheel)"
                    mousewheel-stop-propagation="@ScaleOnMouseWheel">
                </div>
            </div>
            break;
        default:
            break;
    }

    <div
        id="@_canvasHolderId"
        class="bch-canvas-holder">
        <canvas id="@_canvasId"></canvas>
    </div>
</div>

